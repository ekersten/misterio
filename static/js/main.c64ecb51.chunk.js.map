{"version":3,"sources":["data.js","App.js","reportWebVitals.js","index.js"],"names":["data","monsters","id","name","enabled","victims","rooms","App","useState","setMonsters","setVictims","setRooms","enabledMonsters","filter","monster","enabledVictims","victim","enabledRooms","room","Container","fluid","Row","Col","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","ListGroup","sort","a","b","map","Item","Form","Check","type","checked","label","onChange","prevMonsters","newMonsters","item","monsterCopy","toggleMonster","prevVictims","newVictims","victimCopy","toggleVictim","prevRooms","newRooms","roomCopy","toggleRoom","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QA6BeA,EA7BF,CACTC,SAAU,CACN,CAACC,GAAI,EAAGC,KAAM,aAAWC,SAAS,GAClC,CAACF,GAAI,EAAGC,KAAM,eAAgBC,SAAS,GACvC,CAACF,GAAI,EAAGC,KAAM,cAAeC,SAAS,GACtC,CAACF,GAAI,EAAGC,KAAM,WAAYC,SAAS,GACnC,CAACF,GAAI,EAAGC,KAAM,QAASC,SAAS,GAChC,CAACF,GAAI,EAAGC,KAAM,uBAAwBC,SAAS,IAEnDC,QAAS,CACL,CAACH,GAAI,EAAGC,KAAM,QAASC,SAAS,GAChC,CAACF,GAAI,EAAGC,KAAM,UAAWC,SAAS,GAClC,CAACF,GAAI,EAAGC,KAAM,gBAAiBC,SAAS,GACxC,CAACF,GAAI,EAAGC,KAAM,YAAaC,SAAS,GACpC,CAACF,GAAI,EAAGC,KAAM,WAAYC,SAAS,GACnC,CAACF,GAAI,EAAGC,KAAM,YAAaC,SAAS,IAExCE,MAAO,CACH,CAACJ,GAAI,EAAGC,KAAM,aAAcC,SAAS,GACrC,CAACF,GAAI,EAAGC,KAAM,SAAUC,SAAS,GACjC,CAACF,GAAI,EAAGC,KAAM,UAAWC,SAAS,GAClC,CAACF,GAAI,EAAGC,KAAM,eAAaC,SAAS,GACpC,CAACF,GAAI,EAAGC,KAAM,SAAUC,SAAS,GACjC,CAACF,GAAI,EAAGC,KAAM,aAAWC,SAAS,GAClC,CAACF,GAAI,EAAGC,KAAM,cAAeC,SAAS,GACtC,CAACF,GAAI,EAAGC,KAAM,WAASC,SAAS,KCwHzBG,MAlIf,WAAgB,IAAD,EAEmBC,mBAASR,EAAKC,UAFjC,mBAENA,EAFM,KAEIQ,EAFJ,OAGiBD,mBAASR,EAAKK,SAH/B,mBAGNA,EAHM,KAGGK,EAHH,OAIaF,mBAASR,EAAKM,OAJ3B,mBAINA,EAJM,KAICK,EAJD,KAMPC,EAAkBX,EAASY,QAAO,SAAAC,GAAO,OAAIA,EAAQV,WACrDW,EAAiBV,EAAQQ,QAAO,SAAAG,GAAM,OAAIA,EAAOZ,WACjDa,EAAeX,EAAMO,QAAO,SAAAK,GAAI,OAAIA,EAAKd,WAyC/C,OACE,cAACe,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACD,EAAA,EAAUE,OAAX,CAAkBC,GAAIF,IAAKG,OAAQC,SAAS,IAA5C,uBAGA,cAACL,EAAA,EAAUM,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,EAAA,EAAKM,KAAN,UACI,cAACC,EAAA,EAAD,UACC9B,EAAS+B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9B,KAAO+B,EAAE/B,KAAQ,EAAM+B,EAAE/B,KAAO8B,EAAE9B,MAAS,EAAI,KAAIgC,KAAI,SAAArB,GAAO,OACtF,cAACiB,EAAA,EAAUK,KAAX,UACA,cAACC,EAAA,EAAKC,MAAN,CAAYC,KAAK,WAAWrC,GAAE,kBAAaY,EAAQZ,GAArB,aAAoCsC,QAAS1B,EAAQV,QAASqC,MAAO3B,EAAQX,KAAMuC,SAAU,kBA3B3H,SAAA5B,GACpBL,GAAY,SAAAkC,GACV,IAAMC,EAAcD,EAAa9B,QAAO,SAAAgC,GAAI,OAAIA,EAAK3C,KAAOY,EAAQZ,MAC9D4C,EAAW,eAAQhC,GAGzB,OAFAgC,EAAY1C,SAAW0C,EAAY1C,QAE7B,GAAN,mBACKwC,GADL,CAEEE,OAmBiJC,CAAcjC,OAD/I,kBAAgCA,EAAQZ,iBAQpD,eAACsB,EAAA,EAAD,WACE,cAACD,EAAA,EAAUE,OAAX,CAAkBC,GAAIF,IAAKG,OAAQC,SAAS,IAA5C,yBAGA,cAACL,EAAA,EAAUM,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,EAAA,EAAKM,KAAN,UACE,cAACC,EAAA,EAAD,UACG1B,EAAQ2B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9B,KAAO+B,EAAE/B,KAAQ,EAAM+B,EAAE/B,KAAO8B,EAAE9B,MAAS,EAAI,KAAIgC,KAAI,SAAAnB,GAAM,OACtF,cAACe,EAAA,EAAUK,KAAX,UACE,cAACC,EAAA,EAAKC,MAAN,CAAYC,KAAK,WAAWrC,GAAE,iBAAYc,EAAOd,GAAnB,aAAkCsC,QAASxB,EAAOZ,QAASqC,MAAOzB,EAAOb,KAAMuC,SAAU,kBAxDxH,SAAA1B,GACnBN,GAAW,SAAAsC,GACT,IAAMC,EAAaD,EAAYnC,QAAO,SAAAgC,GAAI,OAAIA,EAAK3C,KAAOc,EAAOd,MAC3DgD,EAAU,eAAQlC,GAGxB,OAFAkC,EAAW9C,SAAW8C,EAAW9C,QAE3B,GAAN,mBACK6C,GADL,CAEEC,OAgD6IC,CAAanC,OAD5I,iBAA+BA,EAAOd,iBAQhD,eAACsB,EAAA,EAAD,WACE,cAACD,EAAA,EAAUE,OAAX,CAAkBC,GAAIF,IAAKG,OAAQC,SAAS,IAA5C,0BAGA,cAACL,EAAA,EAAUM,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,EAAA,EAAKM,KAAN,UACE,cAACC,EAAA,EAAD,UACGzB,EAAM0B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9B,KAAO+B,EAAE/B,KAAQ,EAAM+B,EAAE/B,KAAO8B,EAAE9B,MAAS,EAAI,KAAIgC,KAAI,SAAAjB,GAAI,OAClF,cAACa,EAAA,EAAUK,KAAX,UACE,cAACC,EAAA,EAAKC,MAAN,CAAYC,KAAK,WAAWrC,GAAE,eAAUgB,EAAKhB,GAAf,aAA8BsC,QAAStB,EAAKd,QAASqC,MAAOvB,EAAKf,KAAMuC,SAAU,kBArFlH,SAAAxB,GACjBP,GAAS,SAAAyC,GACP,IAAMC,EAAWD,EAAUvC,QAAO,SAAAgC,GAAI,OAAIA,EAAK3C,KAAOgB,EAAKhB,MACrDoD,EAAQ,eAAOpC,GAGrB,OAFAoC,EAASlD,SAAWkD,EAASlD,QAEvB,GAAN,mBACKiD,GADL,CAEEC,OA6EqIC,CAAWrC,OADlI,eAA6BA,EAAKhB,iBAQ5C,eAACsB,EAAA,EAAD,WACE,eAACD,EAAA,EAAUE,OAAX,CAAkBC,GAAIF,IAAKG,OAAQC,SAAS,IAA5C,UACIhB,EAAgB4C,OAASzC,EAAeyC,OAASvC,EAAauC,OADlE,oBAGA,cAACjC,EAAA,EAAUM,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACJ,EAAA,EAAKM,KAAN,UACE,cAACC,EAAA,EAAD,UACG9B,EAAS+B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9B,KAAO+B,EAAE/B,KAAQ,EAAM+B,EAAE/B,KAAO8B,EAAE9B,MAAS,EAAI,KAAIU,QAAO,SAAAC,GAAO,OAAIA,EAAQV,WAAS+B,KAAI,SAAArB,GAAO,OAC3HT,EAAQ2B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9B,KAAO+B,EAAE/B,KAAQ,EAAM+B,EAAE/B,KAAO8B,EAAE9B,MAAS,EAAI,KAAIU,QAAO,SAAAG,GAAM,OAAIA,EAAOZ,WAAS+B,KAAI,SAAAnB,GAAM,OACtHV,EAAM0B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9B,KAAO+B,EAAE/B,KAAQ,EAAM+B,EAAE/B,KAAO8B,EAAE9B,MAAS,EAAI,KAAIU,QAAO,SAAAK,GAAI,OAAIA,EAAKd,WAAS+B,KAAI,SAAAjB,GAAI,OAC9G,eAACa,EAAA,EAAUK,KAAX,WACGtB,EAAQX,KADX,cACyBa,EAAOb,KADhC,OAC0Ce,EAAKf,OAD/C,sBAAoCW,EAAQZ,GAA5C,YAAkDc,EAAOd,GAAzD,YAA+DgB,EAAKhB,iCCnH/EuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c64ecb51.chunk.js","sourcesContent":["const data = {\r\n    monsters: [\r\n        {id: 1, name: 'Drácula', enabled: true},\r\n        {id: 2, name: 'Frankenstein', enabled: true},\r\n        {id: 3, name: 'Hombre Lobo', enabled: true},\r\n        {id: 4, name: 'Fantasma', enabled: true},\r\n        {id: 5, name: 'Momia', enabled: true},\r\n        {id: 6, name: 'Dr. Jeckyll Mr. Hyde', enabled: true},\r\n    ],\r\n    victims: [\r\n        {id: 1, name: 'Conde', enabled: true},\r\n        {id: 2, name: 'Condesa', enabled: true},\r\n        {id: 3, name: 'Ama de llaves', enabled: true},\r\n        {id: 4, name: 'Mayordomo', enabled: true},\r\n        {id: 5, name: 'Doncella', enabled: true},\r\n        {id: 6, name: 'Jardinero', enabled: true},\r\n    ],\r\n    rooms: [\r\n        {id: 1, name: 'Biblioteca', enabled: true},\r\n        {id: 2, name: 'Alcoba', enabled: true},\r\n        {id: 3, name: 'Cochera', enabled: true},\r\n        {id: 4, name: 'Vestíbulo', enabled: true},\r\n        {id: 5, name: 'Bodega', enabled: true},\r\n        {id: 6, name: 'Panteón', enabled: true},\r\n        {id: 7, name: 'Laboratorio', enabled: true},\r\n        {id: 8, name: 'Salón', enabled: true},\r\n    ]\r\n}\r\n\r\nexport default data;","import { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n\nimport data from './data';\n\nfunction App() {\n  \n  const [monsters, setMonsters] = useState(data.monsters);\n  const [victims, setVictims] = useState(data.victims);\n  const [rooms, setRooms] = useState(data.rooms);\n\n  const enabledMonsters = monsters.filter(monster => monster.enabled);\n  const enabledVictims = victims.filter(victim => victim.enabled);\n  const enabledRooms = rooms.filter(room => room.enabled);\n\n  const toggleRoom = room => {\n    setRooms(prevRooms => {\n      const newRooms = prevRooms.filter(item => item.id !== room.id);\n      const roomCopy = {...room};\n      roomCopy.enabled = !roomCopy.enabled;\n\n      return [\n        ...newRooms,\n        roomCopy\n      ];\n    })\n  }\n\n  const toggleVictim = victim => {\n    setVictims(prevVictims => {\n      const newVictims = prevVictims.filter(item => item.id !== victim.id);\n      const victimCopy = { ...victim };\n      victimCopy.enabled = !victimCopy.enabled;\n\n      return [\n        ...newVictims,\n        victimCopy\n      ];\n    })\n  }\n\n  const toggleMonster = monster => {\n    setMonsters(prevMonsters => {\n      const newMonsters = prevMonsters.filter(item => item.id !== monster.id);\n      const monsterCopy = { ...monster };\n      monsterCopy.enabled = !monsterCopy.enabled;\n\n      return [\n        ...newMonsters,\n        monsterCopy\n      ];\n    })\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          <Accordion>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                Monstruos\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                    <ListGroup>\n                    {monsters.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).map(monster => (\n                        <ListGroup.Item key={`monster-${monster.id}`}>\n                        <Form.Check type=\"checkbox\" id={`monster-${monster.id}-checkbox`} checked={monster.enabled} label={monster.name} onChange={() => toggleMonster(monster)} />\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                Víctimas\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <Card.Body>\n                  <ListGroup>\n                    {victims.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).map(victim => (\n                      <ListGroup.Item key={`victim-${victim.id}`}>\n                        <Form.Check type=\"checkbox\" id={`victim-${victim.id}-checkbox`} checked={victim.enabled} label={victim.name} onChange={() => toggleVictim(victim)} />\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                Habitaciones\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <Card.Body>\n                  <ListGroup>\n                    {rooms.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).map(room => (\n                      <ListGroup.Item key={`room-${room.id}`}>\n                        <Form.Check type=\"checkbox\" id={`room-${room.id}-checkbox`} checked={room.enabled} label={room.name} onChange={() => toggleRoom(room)} />\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                { enabledMonsters.length * enabledVictims.length * enabledRooms.length } Combinaciones\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"3\">\n                <Card.Body>\n                  <ListGroup>\n                    {monsters.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).filter(monster => monster.enabled).map(monster => (\n                      victims.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).filter(victim => victim.enabled).map(victim => (\n                        rooms.sort((a, b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)).filter(room => room.enabled).map(room => (\n                          <ListGroup.Item key={`combination-${monster.id}-${victim.id}-${room.id}`}>\n                            {monster.name} mató a {victim.name} en {room.name}\n                          </ListGroup.Item>\n                        ))\n                      ))\n                    ))}\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </Col>\n      </Row>\n    </Container>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}